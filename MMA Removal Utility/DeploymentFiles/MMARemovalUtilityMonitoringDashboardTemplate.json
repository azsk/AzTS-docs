{
  "properties": {
    "lenses": {
      "0": {
        "order": 0,
        "parts": {
          "0": {
            "position": {
              "x": 0,
              "y": 0,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "321fd6fc-149b-46c6-9117-92ade19a09f7",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>); \nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_01_ScopeResolverTriggerProcessor\" and OperationName =~ \"QueueScopes\"\n| where ProcessingStatus_s =~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize InitiatedCount = count() by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| join kind=leftouter (\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_01_ScopeResolverTriggerProcessor\" and OperationName =~ \"QueueScopes\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize \nSucceeded = countif(ProcessingStatus_s =~ \"Succeeded\"),\nFailed = countif(ProcessingStatus_s =~ \"Failed\") by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| order by OperationName, ResourceType \n) on OperationName, ResourceType\n| extend Dangling = iff(InitiatedCount == Failed + Succeeded, 0, InitiatedCount-Failed-Succeeded)\n| project OperationName, ResourceType, InitiatedCount, Succeeded, Failed, Dangling\n\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "AnalyticsGrid",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(<timespanValue>); \nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_01_ScopeResolverTriggerProcessor\" and OperationName =~ \"QueueScopes\"\n| where ProcessingStatus_s =~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize InitiatedCount = count() by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| join kind=leftouter (\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_01_ScopeResolverTriggerProcessor\" and OperationName =~ \"QueueScopes\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize \nSucceeded = countif(ProcessingStatus_s =~ \"Succeeded\"),\nFailed = countif(ProcessingStatus_s =~ \"Failed\") by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| order by OperationName, ResourceType \n) on OperationName, ResourceType\n| extend Dangling = iff(InitiatedCount == Failed + Succeeded, 0, InitiatedCount-Failed-Succeeded)\n| project OperationName, ResourceType, InitiatedCount, Succeeded, Failed, Dangling\n\n",
                  "ControlType": "FrameControlChart",
                  "SpecificChart": "UnstackedColumn",
                  "PartTitle": "Progress: Configured scopes triggered for discovery phase",
                  "PartSubTitle": "Number of scope items successfully queued for discovery phase.",
                  "Dimensions": {
                    "xAxis": {
                      "name": "OperationName",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "Dangling",
                        "type": "long"
                      },
                      {
                        "name": "Failed",
                        "type": "long"
                      },
                      {
                        "name": "InitiatedCount",
                        "type": "long"
                      },
                      {
                        "name": "Succeeded",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "LegendOptions": {
                    "isEnabled": true,
                    "position": "Bottom"
                  }
                }
              }
            }
          },
          "1": {
            "position": {
              "x": 6,
              "y": 0,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "15bbe868-3397-4952-9307-5eb520471585",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>); \nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_02_ScopeResolverProcessor\" and OperationName =~ \"ScopeResolution\"\n| where ProcessingStatus_s =~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize InitiatedCount = count() by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| join kind=leftouter (\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_02_ScopeResolverProcessor\" and OperationName =~ \"ScopeResolution\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize \nSucceeded = countif(ProcessingStatus_s =~ \"Succeeded\"),\nFailed = countif(ProcessingStatus_s =~ \"Failed\") by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| order by OperationName, ResourceType \n) on OperationName, ResourceType\n| extend Dangling = iff(InitiatedCount == Failed + Succeeded, 0, InitiatedCount-Failed-Succeeded)\n| project OperationName, ResourceType, InitiatedCount, Succeeded, Failed, Dangling\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "AnalyticsGrid",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(<timespanValue>); \nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_02_ScopeResolverProcessor\" and OperationName =~ \"ScopeResolution\"\n| where ProcessingStatus_s =~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize InitiatedCount = count() by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| join kind=leftouter (\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_02_ScopeResolverProcessor\" and OperationName =~ \"ScopeResolution\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize \nSucceeded = countif(ProcessingStatus_s =~ \"Succeeded\"),\nFailed = countif(ProcessingStatus_s =~ \"Failed\") by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| order by OperationName, ResourceType \n) on OperationName, ResourceType\n| extend Dangling = iff(InitiatedCount == Failed + Succeeded, 0, InitiatedCount-Failed-Succeeded)\n| project OperationName, ResourceType, InitiatedCount, Succeeded, Failed, Dangling\n\n",
                  "ControlType": "FrameControlChart",
                  "SpecificChart": "UnstackedColumn",
                  "PartTitle": "Progress: Fetching Subscriptions and Azure services",
                  "PartSubTitle": "This chart shows progress of Subscriptions and VMs fetched within the Subscriptions.",
                  "Dimensions": {
                    "xAxis": {
                      "name": "OperationName",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "Dangling",
                        "type": "long"
                      },
                      {
                        "name": "Failed",
                        "type": "long"
                      },
                      {
                        "name": "InitiatedCount",
                        "type": "long"
                      },
                      {
                        "name": "Succeeded",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "LegendOptions": {
                    "isEnabled": true,
                    "position": "Bottom"
                  }
                }
              }
            }
          },
          "2": {
            "position": {
              "x": 12,
              "y": 0,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "473144ef-0c7a-47cc-9133-24eac211e8fa",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>); \nlet TotalVMCount = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VirtualMachine\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\" and OperationName =~ \"VMExtensionInventoryProcessing\"\n| where ProcessingStatus_s =~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize InitiatedCount = count() by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| join kind=leftouter (\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\" and OperationName =~ \"VMExtensionInventoryProcessing\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize \nSucceeded = countif(ProcessingStatus_s =~ \"Succeeded\"),\nFailed = countif(ProcessingStatus_s =~ \"Failed\") by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| order by OperationName, ResourceType \n) on OperationName, ResourceType\n| extend Dangling = iff(InitiatedCount == Failed + Succeeded, 0, InitiatedCount-Failed-Succeeded)\n| project OperationName, ResourceType, ResourceCount = TotalVMCount, InitiatedCount, Succeeded, Failed, Dangling\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "AnalyticsGrid",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(7d); \nlet TablePlaceholder = view () {print RT = ''};\nlet TotalVMCount =  union isfuzzy=true TablePlaceholder, (union (Inventory_CL\n//toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VirtualMachine\" or ResourceType =~ \"VirtualMachineScaleSets\" or ResourceType =~ \"HybridCompute\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize count() by ResourceType\n| project RT = tolower(ResourceType),  rowcount= count_)); \nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\" and OperationName =~ \"VMExtensionInventoryProcessing\"\n| where ProcessingStatus_s =~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize InitiatedCount = count() by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| join kind=leftouter (\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\" and OperationName =~ \"VMExtensionInventoryProcessing\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize \nSucceeded = countif(ProcessingStatus_s =~ \"Succeeded\"),\nFailed = countif(ProcessingStatus_s =~ \"Failed\") by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| order by OperationName, ResourceType \n) on OperationName, ResourceType\n| extend Dangling = iff(InitiatedCount == Failed + Succeeded, 0, InitiatedCount-Failed-Succeeded)\n| project OperationName, ResourceType,  InitiatedCount, Succeeded, Failed, Dangling\n| join kind= leftouter  (TotalVMCount) on $left.ResourceType == $right.RT\n| project OperationName, ResourceType,ResourceCount = rowcount, InitiatedCount, Succeeded, Failed, Dangling\n\n",
                  "ControlType": "FrameControlChart",
                  "SpecificChart": "UnstackedColumn",
                  "PartTitle": "Progress: Fetching VM,VMSS and Azure Arc Extensions",
                  "PartSubTitle": "This chart shows progress of VM,VMSS,Azure Arc server agents/extensions details being fetched. ",
                  "Dimensions": {
                    "xAxis": {
                      "name": "OperationName",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "Dangling",
                        "type": "long"
                      },
                      {
                        "name": "Failed",
                        "type": "long"
                      },
                      {
                        "name": "InitiatedCount",
                        "type": "long"
                      },
                      {
                        "name": "ResourceCount",
                        "type": "long"
                      },
                      {
                        "name": "Succeeded",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "LegendOptions": {
                    "isEnabled": true,
                    "position": "Bottom"
                  }
                }
              }
            }
          },
          "3": {
            "position": {
              "x": 0,
              "y": 4,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "83a5de2e-2242-4439-8d14-3c04f4214b95",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nInventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VirtualMachine\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| extend  OSType = tostring(parse_json(Metadata_s).OSType)\n| summarize count() by OSType\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "AnalyticsGrid",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(<timespanValue>);\nInventory_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s contains \"AzTS_02_ScopeResolverProcessor\"\n//| where ResourceType =~ \"VirtualMachine\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| extend  OSType = tostring(parse_json(Metadata_s).OSType)\n| summarize TotalCount = count() by OSType = tolower( OSType)\n\n",
                  "ControlType": "AnalyticsGrid",
                  "SpecificChart": "Pie",
                  "PartTitle": "Inventory: VM,VMSS,Azure Arc Servers",
                  "PartSubTitle": "OS-wise distribution of Azure services.",
                  "Dimensions": {
                    "xAxis": {
                      "name": "OSType",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "count_",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "LegendOptions": {
                    "isEnabled": true,
                    "position": "Bottom"
                  }
                }
              }
            }
          },
          "4": {
            "position": {
              "x": 6,
              "y": 4,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "15af1eba-1352-435b-bcf0-d2525e110a5e",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nlet virtualMachines = Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VirtualMachine\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend  OSType = tostring(parse_json(Metadata_s).OSType)\n| project VMResourceID = ResourceId, OSType;\nlet virtualMachinesExtensions = Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType;\nvirtualMachines\n| join kind=leftouter (virtualMachinesExtensions) on VMResourceID\n| summarize Extensions = make_list(ExtensionType) by VMResourceID, OSType\n|summarize TotalVM = count(), MMAAgent = countif(Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\"),\nHasAMAAgent = countif(Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\"),\nHasBothAgent = countif((Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")) by OSType\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "AnalyticsGrid",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(<timespanValue>);\nlet virtualMachines = Inventory_CL\n| where TimeGenerated > ago(timeago)\n//| where ResourceType =~ \"VirtualMachine\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend  OSType = tolower(tostring(parse_json(Metadata_s).OSType))\n| where (isnotempty(OSType)) \n| project VMResourceID = ResourceId, OSType;\nlet virtualMachinesExtensions = Inventory_CL\n| where TimeGenerated > ago(timeago) and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType;\nvirtualMachines\n| join kind=leftouter (virtualMachinesExtensions) on VMResourceID\n| summarize Extensions = make_list(ExtensionType) by VMResourceID, OSType\n|summarize TotalServices = count(), ServicesWithOnlyMMAAgent = countif((array_length(Extensions) == 1) and (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\")),\nServicesWithOnlyAMAAgent = countif((array_length(Extensions) == 1) and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")),\nServicesWithBothAgents = countif((Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")) by OSType\n\n",
                  "ControlType": "AnalyticsGrid",
                  "SpecificChart": "UnstackedColumn",
                  "PartTitle": "Inventory: MMA & AMA Agents",
                  "PartSubTitle": "Count of Azure services having only MMA, only AMA & both the agents.",
                  "Dimensions": {
                    "xAxis": {
                      "name": "OSType",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "HasAMAAgent",
                        "type": "long"
                      },
                      {
                        "name": "HasBothAgent",
                        "type": "long"
                      },
                      {
                        "name": "MMAAgent",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "LegendOptions": {
                    "isEnabled": true,
                    "position": "Bottom"
                  }
                }
              }
            }
          },
          "5": {
            "position": {
              "x": 12,
              "y": 4,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "0962d7db-6890-4a36-86e7-23fd2793f095",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nlet virtualMachines = Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VirtualMachine\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend  OSType = tostring(parse_json(Metadata_s).OSType)\n| project VMResourceID = ResourceId, OSType;\nlet virtualMachinesExtensions = Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType;\nvirtualMachines\n| join kind=leftouter (virtualMachinesExtensions) on VMResourceID\n| summarize Extensions = make_list(ExtensionType) by VMResourceID, OSType\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| summarize count() by OSType\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "FrameControlChart",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "value": "Pie",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "value": {
                    "xAxis": {
                      "name": "OSType",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "count_",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "value": {
                    "isEnabled": true,
                    "position": "Bottom"
                  },
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(<timespanValue>);\nlet virtualMachines = Inventory_CL\n| where TimeGenerated > ago(timeago)\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend  OSType = tostring(tolower(parse_json(Metadata_s).OSType))\n| project VMResourceID = ResourceId, OSType;\nlet virtualMachinesExtensions = Inventory_CL\n| where TimeGenerated > ago(timeago) and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType;\nvirtualMachines\n| join kind=leftouter (virtualMachinesExtensions) on VMResourceID\n| summarize Extensions = make_list(ExtensionType) by VMResourceID, OSType\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\" or Extensions contains \"msmonitoringagent\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| summarize count() by OSType\n\n",
                  "PartTitle": "Inventory: Azure Services eligible for Removal Phase",
                  "PartSubTitle": "This chart shows OS type wise summary of VMs,VMSS,Azure Arc Servers having both MMA & AMA agents."
                }
              }
            }
          },
          "6": {
            "position": {
              "x": 0,
              "y": 8,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "83a5de2e-2242-4439-8d14-3c04f4214b95",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nInventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VirtualMachine\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| extend  OSType = tostring(parse_json(Metadata_s).OSType)\n| summarize count() by OSType\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "AnalyticsGrid",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(<timespanValue>);\nInventory_CL\n| where TimeGenerated > ago(timeago)\n| where Source_s contains \"AzTS_02_ScopeResolverProcessor\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize TotalResources = count() by ResourceType\n\n",
                  "ControlType": "AnalyticsGrid",
                  "SpecificChart": "Pie",
                  "PartTitle": "Inventory: Count of VM,VMSS,Azure Arc Servers",
                  "PartSubTitle": "ResourceType-wise distribution of Azure services.",
                  "Dimensions": {
                    "xAxis": {
                      "name": "OSType",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "count_",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "LegendOptions": {
                    "isEnabled": true,
                    "position": "Bottom"
                  }
                }
              }
            }
          },
          "7": {
            "position": {
              "x": 6,
              "y": 8,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "15b59490-5523-4b2b-ba11-08374e93b895",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_07_ExtensionRemovalProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Failed\"\n| extend ErrorCode =  tostring(parse_json(ProcessErrorDetails_s).ErrorCode)\n| summarize count() by ErrorCode\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "FrameControlChart",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "value": "Pie",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "value": {
                    "xAxis": {
                      "name": "ErrorCode",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "count_",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "value": {
                    "isEnabled": true,
                    "position": "Bottom"
                  },
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "PartTitle": "Failures: Agent removal request",
                  "PartSubTitle": "This chart shows error code wise failed requests summary."
                }
              }
            }
          },
          "8": {
            "position": {
              "x": 12,
              "y": 8,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "11119599-143f-4f59-8a20-3ee34ba20f5f",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensions = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType\n| summarize Extensions = make_list(ExtensionType) by VMResourceID\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_07_ExtensionRemovalProcessor\"\n| where ProcessingStatus_s =~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize InitiatedCount = count() by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| join kind=leftouter (\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_07_ExtensionRemovalProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize \nSucceeded = countif(ProcessingStatus_s =~ \"Succeeded\"),\nFailed = countif(ProcessingStatus_s =~ \"Failed\") by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| order by OperationName, ResourceType \n) on OperationName, ResourceType\n| extend Dangling = iff(InitiatedCount == Failed + Succeeded, 0, InitiatedCount-Failed-Succeeded)\n| project OperationName, ResourceType, ResourceCount = virtualMachinesExtensions, InitiatedCount, Succeeded, Failed, Dangling\n\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "AnalyticsGrid",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "GridColumnsWidth": {
                    "OperationName": "139.009px"
                  },
                  "Query": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensions = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago) and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType\n| summarize Extensions = make_list(ExtensionType) by VMResourceID\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\" or Extensions contains \"MSMonitoringAgent\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago) and Source_s == \"AzTS_07_ExtensionRemovalProcessor\"\n| where ProcessingStatus_s =~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize InitiatedCount = count() by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| join kind=leftouter (\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago) and Source_s == \"AzTS_07_ExtensionRemovalProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize \nSucceeded = countif(ProcessingStatus_s =~ \"Succeeded\"),\nFailed = countif(ProcessingStatus_s =~ \"Failed\") by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| order by OperationName, ResourceType \n) on OperationName, ResourceType\n| extend Dangling = iff(InitiatedCount == Failed + Succeeded, 0, InitiatedCount-Failed-Succeeded)\n| project OperationName, ResourceType, ResourceCount = virtualMachinesExtensions, InitiatedCount, Succeeded, Failed, Dangling\n\n",
                  "ControlType": "AnalyticsGrid",
                  "SpecificChart": "UnstackedColumn",
                  "PartTitle": "Progress: Removing MMA agent",
                  "PartSubTitle": "This chart shows progress of MMA agents being removed.",
                  "Dimensions": {
                    "xAxis": {
                      "name": "OperationName",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "Dangling",
                        "type": "long"
                      },
                      {
                        "name": "Failed",
                        "type": "long"
                      },
                      {
                        "name": "InitiatedCount",
                        "type": "long"
                      },
                      {
                        "name": "ResourceCount",
                        "type": "long"
                      },
                      {
                        "name": "Succeeded",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "LegendOptions": {
                    "isEnabled": true,
                    "position": "Bottom"
                  }
                }
              }
            }
          },
          "9": {
            "position": {
              "x": 0,
              "y": 12,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "76483301-f08c-4e40-b135-8597a315f83a",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensionsRemoved = toscalar(InventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_07_ExtensionRemovalProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Succeeded\"\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s =~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize InitiatedCount = count() by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| join kind=leftouter (\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize \nSucceeded = countif(ProcessingStatus_s =~ \"Succeeded\"),\nFailed = countif(ProcessingStatus_s =~ \"Failed\") by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| order by OperationName, ResourceType \n) on OperationName, ResourceType\n| extend Dangling = iff(InitiatedCount == Failed + Succeeded, 0, InitiatedCount-Failed-Succeeded)\n| project OperationName, ResourceType, ResourceCount = virtualMachinesExtensionsRemoved, InitiatedCount, Succeeded, Failed, Dangling\n\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "AnalyticsGrid",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "GridColumnsWidth": {
                    "OperationName": "192.9977px"
                  },
                  "Query": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensionsRemoved = toscalar(InventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago) and Source_s == \"AzTS_07_ExtensionRemovalProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Succeeded\"\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago) and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s =~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize InitiatedCount = count() by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| join kind=leftouter (\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago) and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| summarize \nSucceeded = countif(ProcessingStatus_s =~ \"Succeeded\"),\nFailed = countif(ProcessingStatus_s =~ \"Failed\") by OperationName = tolower(OperationName), ResourceType = tolower(ResourceType)\n| order by OperationName, ResourceType \n) on OperationName, ResourceType\n| extend Dangling = iff(InitiatedCount == Failed + Succeeded, 0, InitiatedCount-Failed-Succeeded)\n| project OperationName, ResourceType, ResourceCount = virtualMachinesExtensionsRemoved, InitiatedCount, Succeeded, Failed, Dangling\n\n",
                  "PartTitle": "Progress: Validating MMA agent removal",
                  "PartSubTitle": "This chart shows status of MMA extension removal request status."
                }
              }
            }
          },
          "10": {
            "position": {
              "x": 6,
              "y": 12,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "85941a8e-1708-4209-81eb-f478811b5738",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensions = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType\n| summarize Extensions = make_list(ExtensionType) by VMResourceID\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Succeeded\"\n| summarize  OpeartionName = \"ExtensionRemoval\", TotalVMs = virtualMachinesExtensions, MMAAgentRemovedFromVM = count() //by OperationName\n\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "FrameControlChart",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "value": "UnstackedColumn",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "value": {
                    "xAxis": {
                      "name": "OpeartionName",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "TotalVMs",
                        "type": "long"
                      },
                      {
                        "name": "MMAAgentRemovedFromVM",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "value": {
                    "isEnabled": true,
                    "position": "Bottom"
                  },
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensions = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago) and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType\n| summarize Extensions = make_list(ExtensionType) by VMResourceID\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\" or Extensions contains \"MSMonitoringAgent\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago) and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Succeeded\"\n| summarize  OpeartionName = \"ExtensionRemoval\", TotalExtensions = virtualMachinesExtensions, ServicesWithMMAAgentRemoved = count() //by OperationName\n\n",
                  "ControlType": "AnalyticsGrid",
                  "PartTitle": "Summary: Total MMA agents successfully removed",
                  "PartSubTitle": "This chart shows total count of Azure Services from which MMA agent has been successfully removed."
                }
              }
            }
          },
          "11": {
            "position": {
              "x": 12,
              "y": 12,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "85941a8e-1708-4209-81eb-f478811b5738",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensions = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType\n| summarize Extensions = make_list(ExtensionType) by VMResourceID\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Succeeded\"\n| summarize  OpeartionName = \"ExtensionRemoval\", TotalVMs = virtualMachinesExtensions, MMAAgentRemovedFromVM = count() //by OperationName\n\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "FrameControlChart",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "value": "UnstackedColumn",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "value": {
                    "xAxis": {
                      "name": "OpeartionName",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "TotalVMs",
                        "type": "long"
                      },
                      {
                        "name": "MMAAgentRemovedFromVM",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "value": {
                    "isEnabled": true,
                    "position": "Bottom"
                  },
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensions = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago) and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| where ResourceId  contains \"microsoft.compute/virtualmachinescalesets\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType\n| summarize Extensions = make_list(ExtensionType) by VMResourceID\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\" or Extensions contains \"MSMonitoringAgent\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago) and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Succeeded\"\n| where ResourceId  contains \"microsoft.compute/virtualmachinescalesets\"\n| summarize OperationName = \"ExtensionRemoval\", TotalVMSSExtensions = virtualMachinesExtensions, VMSSWithMMAAgentRemoved = count()\n\n",
                  "ControlType": "AnalyticsGrid",
                  "PartTitle": "Summary: Total MMA agents successfully removed  on VMSS",
                  "PartSubTitle": "This chart shows total count of VMSS from which MMA agent has been successfully removed."
                }
              }
            }
          },
          "12": {
            "position": {
              "x": 0,
              "y": 16,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "85941a8e-1708-4209-81eb-f478811b5738",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensions = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType\n| summarize Extensions = make_list(ExtensionType) by VMResourceID\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Succeeded\"\n| summarize  OpeartionName = \"ExtensionRemoval\", TotalVMs = virtualMachinesExtensions, MMAAgentRemovedFromVM = count() //by OperationName\n\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "FrameControlChart",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "value": "UnstackedColumn",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "value": {
                    "xAxis": {
                      "name": "OpeartionName",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "TotalVMs",
                        "type": "long"
                      },
                      {
                        "name": "MMAAgentRemovedFromVM",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "value": {
                    "isEnabled": true,
                    "position": "Bottom"
                  },
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensions = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago) and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| where ResourceId  contains \"microsoft.hybridcompute\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType\n| summarize Extensions = make_list(ExtensionType) by VMResourceID\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\" or Extensions contains \"MSMonitoringAgent\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago) and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Succeeded\"\n| where ResourceId  contains \"microsoft.hybridcompute\"\n| summarize  OpeartionName = \"ExtensionRemoval\", TotalArcServerExtensions = virtualMachinesExtensions, ArcServersWithMMAAgentRemoved = count()\n\n",
                  "ControlType": "AnalyticsGrid",
                  "PartTitle": "Summary: Total MMA agents successfully removed  on Azure Arc Servers",
                  "PartSubTitle": "This chart shows total count of Arc Servers from which MMA agent has been successfully removed."
                }
              }
            }
          },
          "13": {
            "position": {
              "x": 6,
              "y": 16,
              "colSpan": 6,
              "rowSpan": 4
            },
            "metadata": {
              "inputs": [
                {
                  "name": "resourceTypeMode",
                  "isOptional": true
                },
                {
                  "name": "ComponentId",
                  "isOptional": true
                },
                {
                  "name": "Scope",
                  "value": {
                    "resourceIds": [
                      "<laResourceId>"
                    ]
                  },
                  "isOptional": true
                },
                {
                  "name": "PartId",
                  "value": "85941a8e-1708-4209-81eb-f478811b5738",
                  "isOptional": true
                },
                {
                  "name": "Version",
                  "value": "2.0",
                  "isOptional": true
                },
                {
                  "name": "TimeRange",
                  "isOptional": true
                },
                {
                  "name": "DashboardId",
                  "isOptional": true
                },
                {
                  "name": "DraftRequestParameters",
                  "isOptional": true
                },
                {
                  "name": "Query",
                  "value": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensions = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType\n| summarize Extensions = make_list(ExtensionType) by VMResourceID\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Succeeded\"\n| summarize  OpeartionName = \"ExtensionRemoval\", TotalVMs = virtualMachinesExtensions, MMAAgentRemovedFromVM = count() //by OperationName\n\n",
                  "isOptional": true
                },
                {
                  "name": "ControlType",
                  "value": "FrameControlChart",
                  "isOptional": true
                },
                {
                  "name": "SpecificChart",
                  "value": "UnstackedColumn",
                  "isOptional": true
                },
                {
                  "name": "Dimensions",
                  "value": {
                    "xAxis": {
                      "name": "OpeartionName",
                      "type": "string"
                    },
                    "yAxis": [
                      {
                        "name": "TotalVMs",
                        "type": "long"
                      },
                      {
                        "name": "MMAAgentRemovedFromVM",
                        "type": "long"
                      }
                    ],
                    "splitBy": [],
                    "aggregation": "Sum"
                  },
                  "isOptional": true
                },
                {
                  "name": "LegendOptions",
                  "value": {
                    "isEnabled": true,
                    "position": "Bottom"
                  },
                  "isOptional": true
                },
                {
                  "name": "IsQueryContainTimeRange",
                  "value": true,
                  "isOptional": true
                },
                {
                  "name": "PartTitle",
                  "isOptional": true
                },
                {
                  "name": "PartSubTitle",
                  "isOptional": true
                }
              ],
              "type": "Extension/Microsoft_OperationsManagementSuite_Workspace/PartType/LogsDashboardPart",
              "settings": {
                "content": {
                  "Query": "let timeago = timespan(<timespanValue>);\nlet virtualMachinesExtensions = toscalar(Inventory_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s =~ \"AzTS_05_VMExtensionInventoryProcessor\"\n| where ResourceId  contains \"microsoft.compute/virtualmachines\"\n| summarize arg_max(TimeGenerated,*) by ResourceId = tolower(ResourceId)\n| extend VMResourceID = tolower(substring(ResourceId,0,indexof(ResourceId, '/', 0, -1, 9 )))\n| extend ExtensionType = tostring(parse_json(Metadata_s).ExtensionType)\n| project ResourceId, VMResourceID, ExtensionType\n| summarize Extensions = make_list(ExtensionType) by VMResourceID\n| where (Extensions contains \"MicrosoftMonitoringAgent\" or Extensions contains \"OmsAgentForLinux\" or Extensions contains \"MSMonitoringAgent\") and (Extensions contains \"AzureMonitorWindowsAgent\" or Extensions contains \"AzureMonitorLinuxAgent\")\n| count);\nInventoryProcessingStatus_CL\n| where TimeGenerated > ago(timeago)\n| where ResourceType =~ \"VMExtension\" and Source_s == \"AzTS_08_ExtensionRemovalStatusCheckProcessor\"\n| where ProcessingStatus_s !~ \"Initiated\"\n| summarize arg_max(TimeGenerated,*) by tolower(ResourceId)\n| where ProcessingStatus_s =~ \"Succeeded\"\n| where ResourceId  contains \"microsoft.compute/virtualmachines/\"\n| summarize  OpeartionName = \"ExtensionRemoval\", TotalVMExtensions = virtualMachinesExtensions, VMsWithMMAAgentRemoved = count()\n\n",
                  "ControlType": "AnalyticsGrid",
                  "PartTitle": "Summary: Total MMA agents successfully removed  on VMs",
                  "PartSubTitle": "This chart shows total count of VMs from which MMA agent has been successfully removed."
                }
              }
            }
          }
        }
      }
    },
    "metadata": {
      "model": {
        "timeRange": {
          "value": {
            "relative": {
              "duration": 24,
              "timeUnit": 1
            }
          },
          "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"
        },
        "filterLocale": {
          "value": "en-us"
        },
        "filters": {
          "value": {
            "MsPortalFx_TimeRange": {
              "model": {
                "format": "utc",
                "granularity": "auto",
                "relative": "7d"
              },
              "displayCache": {
                "name": "UTC Time",
                "value": "Past 7 days"
              },
              "filteredPartIds": [
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b714e",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b7150",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b7152",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b7154",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b7156",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b7158",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b715a",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b715c",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b715e",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b7160",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b7162",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b7164",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b7166",
                "StartboardPart-LogsDashboardPart-8bf4d63f-0adb-42c6-95d0-4a40751b7168"
              ]
            }
          }
        }
      }
    }
  },
  "name": "<dashboardName>",
  "type": "Microsoft.Portal/dashboards",
  "location": "<location>",
  "tags": {
    "hidden-title": "<dashboardName>",
    "AzTSMMARemovalUtilityIdentifier" : "<azTSMMARemovalUtilityIdentifier>"
  },
  "apiVersion": "2015-08-01-preview"
}